/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0;

import java.util.logging.Logger;

import com.swifta.spfinancial.utils.TransactionService;

/**
 * This class was generated by Apache CXF 3.0.2 2015-04-30T13:05:05.221+01:00
 * Generated source version: 3.0.2
 * 
 */

@javax.jws.WebService(serviceName = "spfinancials", portName = "SPfinancialPort", targetNamespace = "http://swifta.com/subsidiary/mats/serviceprovider/operation/spfinancial/v1.0",
// wsdlLocation =
// "/Users/user/Documents/swifta/SPfinancial/src/main/webapp/WEB-INF/wsdl/SPfinancial.wsdl",
wsdlLocation = "/home/ec2-user/wsdl/SPfinancial.wsdl", endpointInterface = "com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0.SPfinancial")
public class SPfinancialPortImpl implements SPfinancial {

	private static final Logger logger = Logger
			.getLogger(SPfinancialPortImpl.class.getName());

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#verifycashoutrequest(java.lang.String orginatingresourceid
	 * ,)java.lang.String subscriberphonenumber ,)java.lang.String amount
	 * ,)java.lang.String referencenumber
	 * ,)com.swifta.subsidiary.mats.serviceprovider
	 * .operation.spfinancial.v1.ParameterExtension extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Verifycashoutresponse verifycashoutrequest(
			java.lang.String orginatingresourceid,
			java.lang.String subscriberphonenumber,
			java.lang.String amount,
			java.lang.String referencenumber,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation verifycashoutrequest");
		System.out.println(orginatingresourceid);
		System.out.println(subscriberphonenumber);
		System.out.println(amount);
		System.out.println(referencenumber);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.performVerifyCashout(
					orginatingresourceid, subscriberphonenumber, amount,
					referencenumber, extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#cashoutrequest(java.lang.String orginatingresourceid
	 * ,)java.lang.String destinationresourceid ,)java.lang.String amount
	 * ,)java.lang.String sendingdescription ,)java.lang.String
	 * receivingdescription
	 * ,)com.swifta.subsidiary.mats.serviceprovider.operation
	 * .spfinancial.v1.ParameterExtension extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Cashoutresponse cashoutrequest(
			java.lang.String orginatingresourceid,
			java.lang.String destinationresourceid,
			java.lang.String amount,
			java.lang.String sendingdescription,
			java.lang.String receivingdescription,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation cashoutrequest");
		System.out.println(orginatingresourceid);
		System.out.println(destinationresourceid);
		System.out.println(amount);
		System.out.println(sendingdescription);
		System.out.println(receivingdescription);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.performCashOut(orginatingresourceid,
					destinationresourceid, amount, sendingdescription,
					receivingdescription, extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#balancerequest(java.lang.String orginatingresourceid
	 * ,)com.swifta
	 * .subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Balanceresponse balancerequest(
			java.lang.String orginatingresourceid,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation balancerequest");
		System.out.println(orginatingresourceid);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.balancerequest(orginatingresourceid,
					extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#transfertobankrequest(java.lang.String orginatingresourceid
	 * ,)java.lang.String amount ,)java.lang.String narration
	 * ,)com.swifta.subsidiary
	 * .mats.serviceprovider.operation.spfinancial.v1.ParameterExtension
	 * extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Transfertobankresponse transfertobankrequest(
			java.lang.String orginatingresourceid,
			java.lang.String amount,
			java.lang.String narration,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation transfertobankrequest");
		System.out.println(orginatingresourceid);
		System.out.println(amount);
		System.out.println(narration);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.performTransferToBank(
					orginatingresourceid, amount, narration,
					extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#cashinrequest(java.lang.String orginatingresourceid
	 * ,)java.lang.String destinationresourceid ,)java.lang.String amount
	 * ,)java.lang.String sendingdescription ,)java.lang.String
	 * receivingdescription
	 * ,)com.swifta.subsidiary.mats.serviceprovider.operation
	 * .spfinancial.v1.ParameterExtension extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Cashinresponse cashinrequest(
			java.lang.String orginatingresourceid,
			java.lang.String destinationresourceid,
			java.lang.String amount,
			java.lang.String sendingdescription,
			java.lang.String receivingdescription,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation cashinrequest");
		System.out.println(orginatingresourceid);
		System.out.println(destinationresourceid);
		System.out.println(amount);
		System.out.println(sendingdescription);
		System.out.println(receivingdescription);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.performCashIn(orginatingresourceid,
					destinationresourceid, amount, sendingdescription,
					receivingdescription, extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#airtimesalesrequest(java.lang.String orginatingresourceid
	 * ,)java.lang.String beneficiarynumber ,)java.lang.String serviceprovider
	 * ,)java.lang.String amount
	 * ,)com.swifta.subsidiary.mats.serviceprovider.operation
	 * .spfinancial.v1.ParameterExtension extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Airtimesalesresponse airtimesalesrequest(
			java.lang.String orginatingresourceid,
			java.lang.String beneficiarynumber,
			java.lang.String serviceprovider,
			java.lang.String amount,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation airtimesalesrequest");
		System.out.println(orginatingresourceid);
		System.out.println(beneficiarynumber);
		System.out.println(serviceprovider);
		System.out.println(amount);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.airtimesalesrequest(orginatingresourceid,
					beneficiarynumber, serviceprovider, amount,
					extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#paybillsrequest(java.lang.String orginatingresourceid
	 * ,)java.lang.String merchantcode ,)java.lang.String amount
	 * ,)java.lang.String sendingdescription ,)java.lang.String
	 * receivingdescription
	 * ,)com.swifta.subsidiary.mats.serviceprovider.operation
	 * .spfinancial.v1.ParameterExtension extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Paybillsresponse paybillsrequest(
			java.lang.String orginatingresourceid,
			java.lang.String billerPubicId,
			java.lang.String amount,
			java.lang.String billServicename,
			java.lang.String accountNumber,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation paybillsrequest");
		System.out.println(orginatingresourceid);
		System.out.println(billerPubicId);
		System.out.println(amount);
		System.out.println(billServicename);
		System.out.println(accountNumber);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.paybillsrequest(orginatingresourceid,
					billerPubicId, amount, billServicename, accountNumber,
					extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1_0
	 * .SPfinancial#cashoutunregisteredrequest(java.lang.String
	 * orginatingresourceid ,)java.lang.String subscriberphonenumber
	 * ,)java.lang.String amount ,)java.lang.String referencenumber
	 * ,)java.lang.String referencecode ,)java.lang.String receivingdescription
	 * ,)com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.
	 * ParameterExtension extensionparameters )*
	 */
	public com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.Cashoutresponse cashoutunregisteredrequest(
			java.lang.String orginatingresourceid,
			java.lang.String subscriberphonenumber,
			java.lang.String amount,
			java.lang.String referencenumber,
			java.lang.String referencecode,
			java.lang.String receivingdescription,
			com.swifta.subsidiary.mats.serviceprovider.operation.spfinancial.v1.ParameterExtension extensionparameters) {
		logger.info("Executing operation cashoutunregisteredrequest");
		System.out.println(orginatingresourceid);
		System.out.println(subscriberphonenumber);
		System.out.println(amount);
		System.out.println(referencenumber);
		System.out.println(referencecode);
		System.out.println(receivingdescription);
		System.out.println(extensionparameters);
		try {
			TransactionService transactionService = new TransactionService();
			return transactionService.cashoutunregisteredrequest(
					orginatingresourceid, subscriberphonenumber, amount,
					referencenumber, referencecode, receivingdescription,
					extensionparameters);
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

}
